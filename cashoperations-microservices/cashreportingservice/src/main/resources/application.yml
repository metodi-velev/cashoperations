server:
  port: 8081
  servlet:
    context-path: /cashreportingservice

spring:
  application:
    name: cashreportingservice
  threads:
    virtual:
      enabled: true
  datasource:
    url: jdbc:h2:mem:testdb2;TRACE_LEVEL_SYSTEM_OUT=3;TRACE_LEVEL_FILE=3
    driverClassName: org.h2.Driver
    username: sa
    password: ''
    hikari:
      maximum-pool-size: 50
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        trace: true
        web-allow-others: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        # jdbc:
          # batch_size: 50
        order_inserts: true
        order_updates: true
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    config:
      uri: http://localhost:8071
      fail-fast: false
      retry:
        initial-interval: 1000
        max-attempts: 6
        max-interval: 2000
  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"

  output:
    ansi:
      enabled: ALWAYS
  profiles:
    active:
      - "qa"
  # Reduce unnecessary autoconfiguration
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

cashoperations:
  service:
    base-url: http://localhost:8080
    api-key: f9Uie8nNf112hx8s

fib:
  auth:
    api-key: f9Uie8nNf112hx8s

# SQL Query Logging Configuration
logging:
  level:
    com.example.cashreportingservice: DEBUG
    org.springframework.web.reactive.function.client: DEBUG
    # Hibernate SQL logging
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
    org.hibernate.orm.jdbc.bind: TRACE

    # Spring Data JPA logging
    org.springframework.data.jpa.repository: DEBUG
    org.springframework.orm.jpa: DEBUG

    # Transaction logging
    org.springframework.transaction: DEBUG

    # DataSource logging
    org.springframework.jdbc.core: DEBUG

    com.h2database: DEBUG  # This might catch some H2 internal logs
  file:
    name: /dev/stdout  # Force all logs to stdout
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always